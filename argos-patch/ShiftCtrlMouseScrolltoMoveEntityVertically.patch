diff --git a/src/plugins/simulator/visualizations/qt-opengl/qtopengl_widget.cpp b/src/plugins/simulator/visualizations/qt-opengl/qtopengl_widget.cpp
index fe70c6df..26e70394 100644
--- a/src/plugins/simulator/visualizations/qt-opengl/qtopengl_widget.cpp
+++ b/src/plugins/simulator/visualizations/qt-opengl/qtopengl_widget.cpp
@@ -924,12 +924,21 @@ namespace argos {
           * If we get here, pcEntity is set to a non-NULL value
           * Rotate the entity
           */
-         CDegrees cDegrees(pc_event->angleDelta().y() / 8);
-         CQuaternion cRotation(ToRadians(cDegrees), CVector3::Z);
-         CQuaternion cOldOrientation(pcEntity->GetOriginAnchor().Orientation);
-         CQuaternion cNewOrientation(cOldOrientation * cRotation);
-         if(pcEntity->MoveTo(pcEntity->GetOriginAnchor().Position, cNewOrientation)) {
-            m_cUserFunctions.EntityRotated(pcEntity->GetRootEntity(), cOldOrientation, cNewOrientation);
+         if (!(pc_event->modifiers() & Qt::ShiftModifier)) {
+            CDegrees cDegrees(pc_event->angleDelta().y() / 8);
+            CQuaternion cRotation(ToRadians(cDegrees), CVector3::Z);
+            CQuaternion cOldOrientation(pcEntity->GetOriginAnchor().Orientation);
+            CQuaternion cNewOrientation(cOldOrientation * cRotation);
+            if(pcEntity->MoveTo(pcEntity->GetOriginAnchor().Position, cNewOrientation)) {
+               m_cUserFunctions.EntityRotated(pcEntity->GetRootEntity(), cOldOrientation, cNewOrientation);
+            }
+         }
+         else {
+            CVector3 cOldPos(pcEntity->GetOriginAnchor().Position);
+            CVector3 cNewPos = cOldPos + CVector3(0, 0, pc_event->angleDelta().y() * 0.00083333333);  // 1/1200
+            if(pcEntity->MoveTo(cNewPos, pcEntity->GetOriginAnchor().Orientation)) {
+               m_cUserFunctions.EntityMoved(pcEntity->GetRootEntity(), cOldPos, cNewPos);
+            }
          }
          /* entity updated, redraw the scene */
          update();

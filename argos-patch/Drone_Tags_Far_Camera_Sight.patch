diff --git a/src/plugins/robots/drone/simulator/drone_cameras_system_default_sensor.cpp b/src/plugins/robots/drone/simulator/drone_cameras_system_default_sensor.cpp
index 707e423c..ad6d57f0 100644
--- a/src/plugins/robots/drone/simulator/drone_cameras_system_default_sensor.cpp
+++ b/src/plugins/robots/drone/simulator/drone_cameras_system_default_sensor.cpp
@@ -14,7 +14,7 @@
 #include <argos3/plugins/simulator/media/tag_medium.h>
 
 #define CAMERA_RANGE_MIN 0.001
-#define CAMERA_RANGE_MAX 1.800
+#define CAMERA_RANGE_MAX 3.500
 
 namespace argos {
 
diff --git a/src/plugins/robots/drone/simulator/drone_entity.cpp b/src/plugins/robots/drone/simulator/drone_entity.cpp
index 6bdb1426..7edc2c66 100644
--- a/src/plugins/robots/drone/simulator/drone_entity.cpp
+++ b/src/plugins/robots/drone/simulator/drone_entity.cpp
@@ -13,8 +13,10 @@
 
 #include <argos3/plugins/simulator/entities/directional_led_equipped_entity.h>
 #include <argos3/plugins/simulator/entities/radio_equipped_entity.h>
+#include <argos3/plugins/simulator/entities/tag_equipped_entity.h>
 #include <argos3/plugins/simulator/media/directional_led_medium.h>
 #include <argos3/plugins/simulator/media/radio_medium.h>
+#include <argos3/plugins/simulator/media/tag_medium.h>
 
 #include <argos3/plugins/robots/drone/simulator/drone_flight_system_entity.h>
 
@@ -25,6 +27,9 @@ namespace argos {
 
    const Real CDroneEntity::WIFI_TRANSMISSION_RANGE = 10.0;
 
+   const Real CDroneEntity::TAG_SIDE_LENGTH = 0.0235;
+   const CVector3 CDroneEntity::TAG_OFFSET_POSITION = {0.0, 0.0, 0.25};
+
    /****************************************/
    /****************************************/
 
@@ -35,6 +40,7 @@ namespace argos {
       m_pcEmbodiedEntity(nullptr),
       m_pcFlightSystemEntity(nullptr),
       m_pcRadioEquippedEntity(nullptr),
+      m_pcTagEquippedEntity(nullptr),
       m_bDebug(false) {}
 
    /****************************************/
@@ -66,6 +72,22 @@ namespace argos {
             m_pcRadioEquippedEntity->Enable();
          }
          AddComponent(*m_pcRadioEquippedEntity);
+         /* create and initialize the tags */
+         m_pcTagEquippedEntity = new CTagEquippedEntity(this, "tags_0");
+         m_pcTagEquippedEntity->AddTag("tag_0",
+                                       TAG_OFFSET_POSITION,
+                                       CQuaternion(),
+                                       m_pcEmbodiedEntity->GetOriginAnchor(),
+                                       CRadians::PI_OVER_THREE,
+                                       TAG_SIDE_LENGTH,
+                                       GetId());
+         std::string strTagMedium("tags");
+         GetNodeAttributeOrDefault(t_tree, "tag_medium", strTagMedium, strTagMedium);
+         CTagMedium& cTagMedium =
+            CSimulator::GetInstance().GetMedium<CTagMedium>(strTagMedium);
+         m_pcTagEquippedEntity->SetMedium(cTagMedium);
+         m_pcTagEquippedEntity->Enable();
+         AddComponent(*m_pcTagEquippedEntity);
          /* create and initialize the directional LED equipped entity */
          m_pcDirectionalLEDEquippedEntity = new CDirectionalLEDEquippedEntity(this, "leds_0");
          m_pcDirectionalLEDEquippedEntity->AddLED("led_0",
diff --git a/src/plugins/robots/drone/simulator/drone_entity.h b/src/plugins/robots/drone/simulator/drone_entity.h
index 09dbbe04..9b545ca8 100644
--- a/src/plugins/robots/drone/simulator/drone_entity.h
+++ b/src/plugins/robots/drone/simulator/drone_entity.h
@@ -13,6 +13,7 @@ namespace argos {
    class CDroneFlightSystemEntity;
    class CEmbodiedEntity;
    class CRadioEquippedEntity;
+   class CTagEquippedEntity;
 }
 
 #include <argos3/core/simulator/entity/composable_entity.h>
@@ -73,6 +74,14 @@ namespace argos {
          return *m_pcRadioEquippedEntity;
       }
 
+      inline CTagEquippedEntity& GetTagEquippedEntity() {
+         return *m_pcTagEquippedEntity;
+      }
+
+      inline const CTagEquippedEntity& GetTagEquippedEntity() const {
+         return *m_pcTagEquippedEntity;
+      }
+
       inline bool IsDebug() const {
          return m_bDebug;
       }
@@ -86,8 +95,11 @@ namespace argos {
       CEmbodiedEntity*               m_pcEmbodiedEntity;
       CDroneFlightSystemEntity*      m_pcFlightSystemEntity;
       CRadioEquippedEntity*          m_pcRadioEquippedEntity;
+      CTagEquippedEntity*            m_pcTagEquippedEntity;
       /* constants */
       static const Real WIFI_TRANSMISSION_RANGE;
+      static const Real TAG_SIDE_LENGTH;
+      static const CVector3 TAG_OFFSET_POSITION;
       /* debug flag */
       bool m_bDebug;
    };
